plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.4'
    id 'io.spring.dependency-management' version '1.1.0'
    id "org.asciidoctor.jvm.convert" version "3.3.2"
}

group = 'com.developers.live'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    all {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging' // 중복 sl4j2 오류 해결
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
    asciidoctorExt
}

repositories {
    mavenCentral()
}

ext {
    set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
    // 로깅 처리
    implementation 'org.springframework.boot:spring-boot-starter-log4j2' // loging을 위한 디펜던시; 기본 logback 삭제
    implementation group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-yaml', version: '2.10.3' //dataformat 처리

    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'

    // spring rest docs
    asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'

    implementation 'javax.xml.bind:jaxb-api:2.3.0'
    implementation 'com.fasterxml.jackson.core:jackson-databind'

    // security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    testImplementation 'org.springframework.security:spring-security-test'

    // jwt
    implementation 'com.google.code.gson:gson:2.9.1'
    implementation 'io.jsonwebtoken:jjwt:0.9.1'
}

tasks.named('test') {
    useJUnitPlatform()
}


ext {
    snippetsDir = file('build/generated-snippets')
	outputDir = file('build/docs/asciidoc')
}

test {
    outputs.dir snippetsDir
}

asciidoctor {
    inputs.dir snippetsDir
    configurations 'asciidoctorExt'
    dependsOn test
    baseDirFollowsSourceDir()
}

task copyDocument(type: Copy) {
    dependsOn asciidoctor
    from file("build/docs/asciidoc/")
    into file("src/main/resources/static/docs")
}

build {
    dependsOn copyDocument
}

// 빌드 시 서브 모듈의 설정을 포함시키기
task copyPrivate(type: Copy) {
    copy {
        from './developers-secret'
        include "*.yml"
        into 'src/main/resources'
    }
}

bootJar {
    dependsOn copyDocument
    from ("${asciidoctor.outputDir}") {
        into 'src/main/resources/static/docs'
    }
    copyPrivate
}